[{"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/App.tsx":"1","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/header.tsx":"2","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/util.tsx":"3","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/game/board.tsx":"4","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/game/robot.tsx":"5","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/game/hand.tsx":"6","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/login.tsx":"7","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/index.js":"8","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/arena/arena.tsx":"9","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/shared/hands_input.tsx":"10","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/recoil_states.tsx":"11","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/shared/subrank.tsx":"12","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/room.tsx":"13","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/arena/timer.tsx":"14"},{"size":1302,"mtime":1609747141951,"results":"15","hashOfConfig":"16"},{"size":3189,"mtime":1609785349899,"results":"17","hashOfConfig":"16"},{"size":4225,"mtime":1610210714258,"results":"18","hashOfConfig":"16"},{"size":3019,"mtime":1610210186384,"results":"19","hashOfConfig":"16"},{"size":719,"mtime":1609942485854,"results":"20","hashOfConfig":"16"},{"size":254,"mtime":1607685692010,"results":"21","hashOfConfig":"16"},{"size":2595,"mtime":1608995054628,"results":"22","hashOfConfig":"16"},{"size":218,"mtime":1606986828234,"results":"23","hashOfConfig":"16"},{"size":7873,"mtime":1610872737384,"results":"24","hashOfConfig":"16"},{"size":8874,"mtime":1610872300160,"results":"25","hashOfConfig":"16"},{"size":413,"mtime":1609055920023,"results":"26","hashOfConfig":"16"},{"size":5542,"mtime":1610046660851,"results":"27","hashOfConfig":"16"},{"size":145,"mtime":1609747126311,"results":"28","hashOfConfig":"16"},{"size":1527,"mtime":1610299534370,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1xelvjt",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/App.tsx",["69","70"],"import Arena from \"./arena/arena\"\nimport Header from \"./header\"\nimport styled from \"styled-components\"\nimport Login from \"./login\"\nimport { RecoilRoot, useRecoilState, useSetRecoilState } from \"recoil\"\nimport woodImg from \"./img/wood.jpg\"\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport RoomList from \"./room\"\nimport { fetchMe, userState } from \"./recoil_states\"\nimport { useEffect } from \"react\"\n\nconst TestBox = styled(\"div\")`\n  position:relative;\n  height:calc(100% - 6ex);\n`\n\nconst RootDiv = styled.div`\n  width:100%;\n  height:100%;\n  overflow:hidden;\n  background-image:url(${woodImg});\n  background-repeat:repeat;\n`\n\nfunction App() {\n  return (\n    <RootDiv>\n      <RecoilRoot>\n          <InnerApp />\n      </RecoilRoot>\n    </RootDiv>\n  );\n}\n\nfunction InnerApp() {\n  const setUser = useSetRecoilState(userState)\n\n  useEffect(() => {\n    fetchMe(setUser)\n  }, [setUser]);\n\n  return (\n    <Router>\n      <div style={{ position: \"relative\", height: \"6ex\" }}>\n        <Header />\n      </div>\n      <TestBox>\n        <Switch>\n          <Route exact path=\"/\">\n            <Arena />\n          </Route>\n          <Route exact path=\"/roomlist\">\n            <RoomList />\n          </Route>\n        </Switch>\n      </TestBox>\n        </Router>\n  )\n}\n\nexport default App;\n",["71","72"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/header.tsx",["73"],"import react, { useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport styled from \"styled-components\"\nimport {fetchMe, userState} from \"./recoil_states\"\nimport { API_SERVER } from \"./util\"\nimport {useHistory} from \"react-router-dom\"\nimport { CircularProgress } from \"@material-ui/core\"\ninterface Props {\n\n}\n\nconst HeaderBox = styled(\"div\")`\n    width:100%;\n    height:100%;\n    position:relative;\n    background-color:rgba(255,255,255,0.48);\n    box-shadow:0px 0px 5px black;\n    color:saddlebrown;\n    display:flex;\n`\n\nconst HeaderContent = styled(\"div\")`\n    /* height:100%; */\n    width:fit-content;\n    font-size:x-large;\n    text-align:center;\n    font-weight:bold;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    padding-left: 0.25em;\n    padding-right: 0.25em;\n    margin-left: 0.25em;\n    margin-right: 0.25em;\n    box-sizing: border-box;\n`\n\nconst HeaderButton = styled(HeaderContent)`\n    /* background-color:rgba(0,0,0,0.15); */\n    /* margin-left:0.5em; */\n    border: outset 3px #8040129e;\n    border-radius: 7px;\n    margin-top:2.5px;\n    margin-bottom:2.5px;\n    \n    &:hover {\n        /* line-height:103%; */\n        border: inset 3px #8040129e;\n        cursor:pointer;\n    }\n`\n\n\nconst RightBox = styled(\"div\") `\n    display:flex;\n`\n\nconst LeftBox = styled(\"div\") `\n    margin-left: auto;\n    margin-right: 1vw;\n    display:flex;\n`\n\nexport default function Header(props : Props) {\n    const [loading, setLoading] = useState(false)\n    const [user, setUser] = useRecoilState(userState)\n\n    const loginreq = () => {\n        setLoading(true)\n        fetch(API_SERVER+\"/twitter/signin\", {mode:\"same-origin\"})\n            .then((res) => res.json() )\n            .then((data) => {\n                console.log(data)\n                const w = window.open(data[\"url\"],\"twitter-login\", 'width=300,height=300')\n                if(w){\n                    w.focus()\n                    var timer = setInterval(function() { \n                        if(w.closed) {\n                            clearInterval(timer);\n                            fetchMe(setUser)\n                            setLoading(false)\n                        }\n                    }, 1000);\n                }\n            })\n            .catch((err) => console.error(err));\n            }\n\n    const logoutreq = () => {\n        fetch(API_SERVER+\"/signout\", {mode:\"same-origin\"})\n        .then(()=>setUser(null))\n        .catch((err) => console.error(err));\n    }\n\n    let history = useHistory();\n    return (\n        <HeaderBox> \n            <RightBox>\n            <HeaderButton onClick={()=>{history.push(\"/\")}}>Arena</HeaderButton>\n            <HeaderButton onClick={()=>{history.push(\"/roomlist\")}}>Rooms</HeaderButton>\n            </RightBox>\n            <LeftBox>\n            {user!==null && <HeaderContent>{user.name}</HeaderContent> }\n            {user!==null && <HeaderButton onClick={logoutreq}>LOGOUT</HeaderButton> }\n            {user!==null || (loading ? <HeaderContent><CircularProgress color=\"inherit\"/></HeaderContent> :\n                <HeaderButton onClick={loginreq}>LOGIN</HeaderButton> )\n            }\n            </LeftBox>\n        </HeaderBox>\n    )\n}",["74","75"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/util.tsx",["76","77"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/game/board.tsx",["78","79","80","81","82"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/game/robot.tsx",["83"],"\nimport styled from \"styled-components\"\nimport {Color, Pos, robotColor, robotImg} from \"../util\"\n\nexport interface RobotModel{\n    pos : Pos\n    glow?: boolean\n    idx : number\n}\n\n\nconst RobotImg = styled(\"img\")<{cellSize:number, x:number, y:number}>`\n     position:absolute;\n     transition: transform 0.2s;\n     width:${p=>p.cellSize}px;\n     height:${p=>p.cellSize}px;\n     top:0px;\n     left:0px;  \n     transform:translate(${p=>p.x}%,${p=>p.y}%);\n`\nexport default function Robot(props: {robot:RobotModel, cellSize:number}){\n    const {robot, cellSize} = props\n    const pos = robot.pos;\n    return (\n        <RobotImg cellSize={cellSize} x={pos.x*100} y={pos.y*100} src={robotImg(robotColor(robot.idx))}/>\n    )\n}\n","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/game/hand.tsx",["84"],"import {Color} from \"../util\"\n\n//Dir 方向　上下左右\nexport type Dir = string\n\nexport const UP: Dir = \"up\"\nexport const RT: Dir = \"rt\"\nexport const DN: Dir = \"dn\"\nexport const LT: Dir = \"lt\"\n\nexport interface Hand {\n\trobot: number\n    dir :  Dir\n}\n","/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/login.tsx",["85","86"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/index.js",[],["87","88"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/arena/arena.tsx",["89","90","91","92","93","94","95","96","97","98"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/shared/hands_input.tsx",["99","100","101","102","103","104","105","106","107","108"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/recoil_states.tsx",["109"],"\nimport User from \"./shared/user\"\nimport { fetchMeAPI } from \"./util\"\n\nimport { atom, useSetRecoilState } from \"recoil\"\n\nexport const userState = atom<User | null>({\n    key: \"userState\",\n    default: null\n})\n\nexport function fetchMe(setUser:any) {\n    // const setUser = useSetRecoilState(userState)\n    fetchMeAPI()\n    .then((user) => setUser(user))\n    .catch((err)=>{console.log(\"aaa\"+err);setUser(null)});\n}",["110","111"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/shared/subrank.tsx",["112","113","114"],"import { Hand } from \"../game/hand\"\nimport User from \"./user\"\nimport styled, { keyframes } from \"styled-components\"\nimport { useRecoilValue } from \"recoil\"\nimport { userState } from \"../recoil_states\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { CSSTransition } from \"react-transition-group\"\nimport { compSub } from \"../util\"\n\n\nexport interface SubmissionModel {\n    id:number\n    hands : Hand[]\n    user : User\n    date : Date\n    opt : Boolean\n}\n\n/* transform: translateY(${t}) translateX(${0}px); */\n\nconst shine = keyframes`\n  0% {\n    transform: scale(0) rotate(45deg);\n    opacity: 0;\n  }\n  80%{ \n    transform: scale(0) rotate(45deg);\n    opacity: 0.5;\n  }\n  81%{ \n    transform: scale(4) rotate(45deg);\n    opacity: 1;\n  }\n  100%{ \n    transform: scale(50) rotate(45deg);\n    opacity: 0;\n  }\n`\n\nconst ResBox = styled('div')<{opt:Boolean}>`\n    padding: 12px 12px 12px 5px;\n\n    font-weight: bold;\n    /* border: inset 4px #a4c7cc;*/\n    border-radius:7px;\n    background-color: ${p=>p.opt?\"gold\":\"floralwhite\"}; \n    color: black;\n    text-shadow: 0 0 1px black;\n    box-shadow: 1px 1px 4px #8c6d55;\n    -webkit-text-decoration: none;\n    text-decoration: none;\n    display:grid;\n    grid-template-rows: 6fr 4fr;\n    grid-template-columns: 2fr 4fr 4fr;\n    overflow:hidden;\n    z-index:10;\n    /* position:absolute; */\n    height:100%;\n    width:100%;\n    box-sizing:border-box;\n    position:relative;\n    \n    &::before{ \n        content: '';\n        width: 1em;\n        height: 100%;\n        background-color: #fff;\n        animation: ${p=>p.opt ? shine : \"\"}  3s ease-in-out infinite;\n        position: absolute;\n        left: 0;\n        top:-180;\n        opacity: 0;\n        transform: rotate(45deg);\n    }\n`\n\nconst MainBox = styled.div`\n    text-align:center;\n    font-size:larger;\n    grid-column:2;\n    grid-row:1;\n`\nconst NameText = styled.div`\n    text-align:right;\n    font-size:small;\n    grid-column:2/4;\n    grid-row:2;\n`\n\nconst RankBox = styled.div`\n    grid-column:1;\n    grid-row-start:1;\n    grid-row-end:3;\n    display:flex;\n    align-items:center;\n    flex-direction:vertical;\n    font-size:larger;\n    /* color:#434fa9; */\n    width:100%;\n`\n\nfunction getRankStr(rank : number) : string {\n    const rs = rank.toString()\n    if(rs[rs.length-1] === \"1\") return rs+\"st\"\n    if(rs[rs.length-1] === \"2\") return rs+\"nd\"\n    if(rs[rs.length-1] === \"3\") return rs+\"rd\"\n    return rs+\"th\"\n}\n\nfunction Submission(props : {rank:number, sub : SubmissionModel}) {\n    const {rank, sub} = props\n\n    return (\n        <ResBox opt={sub.opt}>\n            <RankBox><div style={{marginLeft:\"auto\", marginRight:\"auto\"}}>{(rank + 1).toString()}</div></RankBox>\n            <MainBox>{sub.hands.length.toString().padStart(2,\" \") +\" moves\"} </MainBox>\n            <NameText>{`by ${sub.user.name}`}</NameText>\n        </ResBox>\n    )\n}\n\nconst RankingBox = styled('div') `\n    white-space: nowrap;\n    width:100%;\n`\n\nconst RankingTitle = styled('div') `\n    color:saddlebrown;\n    font-weight: bold;\n    font-size: x-large;\n    position:relative;\n    text-align:center;\n    border-radius: 4px;\n    border: solid;\n`\n\nconst SubmissoinsBox = styled(\"div\")`\n    position:relative;\n    width:100%;\n`\n\nconst appear = (x:string, y:string, t:string) => keyframes`\n    0%{\n        transform: translateY(${y}) translateX(${x});\n        opacity:0;\n    }\n    50%{\n        transform: translateY(${y}) translateX(${x});\n        opacity:1;\n    }\n    100%{\n        transform: translateY(${t}) translateX(${0});\n        opacity:1;\n    }\n`\nconst AnimSubmission = styled(\"div\")<{pos:string, animate:boolean, mine:boolean, sx:string,sy:string}>`\n    position:absolute;\n    transform: translateY(${p=>p.pos});\n    transition:transform 0.5s; \n    animation:${p=>p.animate ? (p.mine?appear(p.sx,p.sy,p.pos):appear(\"0\", \"100vh\",p.pos)):\"\"} 2s ease-in-out;\n    box-sizing:border-box;\n    width:100%;\n    margin: 12px 12px 12px 0px;\n    z-index:10;\n    height:8ex;\n`\n\nexport default function SubRanking(props : {subs : SubmissionModel[], animate: number[]}){\n    const {subs, animate} = props\n    const [sButtonPos, setSButtonPos] = useState([0,0])\n    const ref = useRef<HTMLDivElement>(null)\n    const animated = useRef(new Map<number,boolean>())\n    const user = useRecoilValue(userState)\n\n    useEffect(()=>{\n        if(animated.current === null) return;\n        animate.forEach((a)=>{\n            if(!animated.current.has(a)){\n                animated.current.set(a, true)\n            }\n        })\n    },[animate])\n\n    useEffect(()=>{\n        if(ref.current === null) return;\n        const belm = document.getElementById(\"SendButton\")\n        if(!belm) return;\n        setSButtonPos([belm.getBoundingClientRect().left - ref.current.getBoundingClientRect().left, belm.getBoundingClientRect().top - ref.current.getBoundingClientRect().top])\n        console.log([belm.getBoundingClientRect().left, ref.current.getBoundingClientRect().left])\n    },[ref.current])\n\n    return (\n        <RankingBox>\n        <RankingTitle>SUBMISSIONS</RankingTitle>\n        <SubmissoinsBox ref={ref}>\n        {subs.sort(compSub).map((sub, idx) =>\n            <AnimSubmission key={sub.id.toString()} pos={`${idx*110}%`} sx={sButtonPos[0]+\"px\"} sy={sButtonPos[1]+\"px\"} mine={user!==null && user.id===sub.user.id} animate={animated.current.get(sub.id) as boolean} onAnimationEnd={()=>{animated.current.set(sub.id, false)}}>\n                <Submission sub={sub} rank={idx}/>\n            </AnimSubmission>\n        )}\n        </SubmissoinsBox>\n        </RankingBox>\n    )\n}",["115","116"],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/room.tsx",[],"/home/akihiro/repos/RicochetRobotsWeb/front/ricochetrobots/src/arena/timer.tsx",["117","118"],{"ruleId":"119","severity":1,"message":"120","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":5,"column":22,"nodeType":"121","messageId":"122","endLine":5,"endColumn":36},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"119","severity":1,"message":"128","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"124","replacedBy":"129"},{"ruleId":"126","replacedBy":"130"},{"ruleId":"119","severity":1,"message":"131","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":168,"column":5,"nodeType":"134","endLine":168,"endColumn":7,"suggestions":"135"},{"ruleId":"119","severity":1,"message":"136","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"137","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"119","severity":1,"message":"138","line":9,"column":9,"nodeType":"121","messageId":"122","endLine":9,"endColumn":14},{"ruleId":"119","severity":1,"message":"139","line":10,"column":10,"nodeType":"121","messageId":"122","endLine":10,"endColumn":14},{"ruleId":"119","severity":1,"message":"140","line":10,"column":16,"nodeType":"121","messageId":"122","endLine":10,"endColumn":24},{"ruleId":"119","severity":1,"message":"138","line":3,"column":9,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"138","line":1,"column":9,"nodeType":"121","messageId":"122","endLine":1,"endColumn":14},{"ruleId":"119","severity":1,"message":"141","line":3,"column":22,"nodeType":"121","messageId":"122","endLine":3,"endColumn":32},{"ruleId":"119","severity":1,"message":"142","line":13,"column":12,"nodeType":"121","messageId":"122","endLine":13,"endColumn":16},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","replacedBy":"144"},{"ruleId":"119","severity":1,"message":"145","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"146","line":5,"column":46,"nodeType":"121","messageId":"122","endLine":5,"endColumn":54},{"ruleId":"119","severity":1,"message":"147","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"148","line":12,"column":26,"nodeType":"121","messageId":"122","endLine":12,"endColumn":43},{"ruleId":"119","severity":1,"message":"149","line":13,"column":10,"nodeType":"121","messageId":"122","endLine":13,"endColumn":17},{"ruleId":"119","severity":1,"message":"150","line":37,"column":7,"nodeType":"121","messageId":"122","endLine":37,"endColumn":13},{"ruleId":"119","severity":1,"message":"151","line":66,"column":16,"nodeType":"121","messageId":"122","endLine":66,"endColumn":22},{"ruleId":"119","severity":1,"message":"152","line":66,"column":34,"nodeType":"121","messageId":"122","endLine":66,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":78,"column":21,"nodeType":"121","messageId":"155","endLine":78,"endColumn":23},{"ruleId":"132","severity":1,"message":"156","line":172,"column":8,"nodeType":"134","endLine":172,"endColumn":14,"suggestions":"157"},{"ruleId":"119","severity":1,"message":"158","line":5,"column":17,"nodeType":"121","messageId":"122","endLine":5,"endColumn":20},{"ruleId":"119","severity":1,"message":"159","line":17,"column":10,"nodeType":"121","messageId":"122","endLine":17,"endColumn":20},{"ruleId":"119","severity":1,"message":"160","line":39,"column":7,"nodeType":"121","messageId":"122","endLine":39,"endColumn":14},{"ruleId":"119","severity":1,"message":"161","line":76,"column":7,"nodeType":"121","messageId":"122","endLine":76,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":117,"column":13,"nodeType":"164","endLine":117,"endColumn":157},{"ruleId":"165","severity":1,"message":"166","line":235,"column":21,"nodeType":"167","messageId":"168","endLine":235,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":243,"column":20,"nodeType":"167","messageId":"168","endLine":243,"endColumn":22},{"ruleId":"165","severity":1,"message":"166","line":246,"column":20,"nodeType":"167","messageId":"168","endLine":246,"endColumn":22},{"ruleId":"132","severity":1,"message":"169","line":254,"column":8,"nodeType":"134","endLine":254,"endColumn":15,"suggestions":"170"},{"ruleId":"132","severity":1,"message":"171","line":279,"column":8,"nodeType":"134","endLine":279,"endColumn":22,"suggestions":"172"},{"ruleId":"119","severity":1,"message":"148","line":5,"column":16,"nodeType":"121","messageId":"122","endLine":5,"endColumn":33},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","replacedBy":"144"},{"ruleId":"119","severity":1,"message":"173","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":23},{"ruleId":"119","severity":1,"message":"174","line":102,"column":10,"nodeType":"121","messageId":"122","endLine":102,"endColumn":20},{"ruleId":"132","severity":1,"message":"175","line":190,"column":7,"nodeType":"134","endLine":190,"endColumn":20,"suggestions":"176"},{"ruleId":"124","replacedBy":"177"},{"ruleId":"126","replacedBy":"178"},{"ruleId":"119","severity":1,"message":"179","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"180","line":38,"column":15,"nodeType":"121","messageId":"122","endLine":38,"endColumn":17},"@typescript-eslint/no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'useRecoilState' is defined but never used.","no-native-reassign",["181"],"no-negated-in-lhs",["182"],"'react' is defined but never used.",["181"],["182"],"'Game' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.","ArrayExpression",["183"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Color' is defined but never used.","'cast' is defined but never used.","'Castable' is defined but never used.","'fetchMeAPI' is defined but never used.","'user' is assigned a value but never used.",["181"],["182"],"'BoardModel' is defined but never used.","'simulate' is defined but never used.","'ClientEvent' is defined but never used.","'useSetRecoilState' is defined but never used.","'fetchMe' is defined but never used.","'Screen' is assigned a value but never used.","'robots' is assigned a value but never used.","'reached' is assigned a value but never used.","@typescript-eslint/no-redeclare","'np' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'procServerEvent'. Either include it or remove the dependency array.",["184"],"'css' is defined but never used.","'parseHands' is defined but never used.","'DirText' is assigned a value but never used.","'ResBox' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'clearHands', 'onSubmit', and 'rmHand'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'pressArrow'. Either include it or remove the dependency array.",["186"],"'CSSTransition' is defined but never used.","'getRankStr' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'ref.current'. Either exclude it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["187"],["181"],["182"],"'Timer' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [downHandler, upHandler]",{"range":"198","text":"199"},"Update the dependencies array to be: [procServerEvent, user]",{"range":"200","text":"201"},"Update the dependencies array to be: [clearHands, hands, onSubmit, rmHand]",{"range":"202","text":"203"},"Update the dependencies array to be: [arrowPressed, pressArrow]",{"range":"204","text":"205"},"Update the dependencies array to be: []",{"range":"206","text":"207"},[4129,4131],"[downHandler, upHandler]",[5975,5981],"[procServerEvent, user]",[6973,6980],"[clearHands, hands, onSubmit, rmHand]",[7777,7791],"[arrowPressed, pressArrow]",[4941,4954],"[]"]